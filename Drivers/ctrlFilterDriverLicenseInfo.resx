<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        3QAAAN0BcFOiBwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAANzSURBVFhHxZZt
        SFNRGMcvOpfpfAkRRUFkRBKtN8mXnDpZ+JLQSHxDSDawAnNBYygKSTKRQjcNVm5JlNj2KSWiTBD9YOuL
        L0xJQRRUJuonBQURXeG/e45NZrtDDb174Hd37n/nPM//HO499zAAfAqnyCecIp9winzCKfIJp8gnexeG
        8WO5KxQKXoiCAsyE0OAzrcYGRUxcdIiSvTedFGyN56QWqfm3NhMUFhI4ei7srPNRWfJug1oOgr4mF5v2
        etgs99FWd/vEqKlI340ID3KyNUdIbSZMdObNrZvibcegFoPvVbC0FMHK8sV0D30d5SfOz89VcE4+Q77s
        wjZb28yIgoSrn16VoV6dDVFkNCIlKYi8nIqo6xmnQkhULFrq7rArW4GQYOEq4+/v93t5qBpJSZcQ9aAZ
        8a02iI0jOP9uBnFN3xBba6Xt/4GMJTnctZgnHZBKrwHTOrC1f+0buEEMPNQfMCB+PYZ4w/cDCY4DGUty
        uGsxmrdIS7tKDQjY2vsG0pIvwl8ggCBAuIfwdPAXBCAr/YqngazUBFgsFiwvL6O9vR0LCwtYXFyE2WzG
        6Ogo+8YAAwMD6O3tpW1vQfqQmJqaovl2dnYwOzuLzs5ObG5uoq+vD7mZEu8G5ufnIRKJYDQaaefi4mKI
        xWKsrKwgMTERmZmZcDgctMi/0dXVBYmETc6GVCpFUVERuru7kZOTg/LycjqZQw2QGeTl5UGtVtPO+fn5
        9H56ehpKpRIzMzNYX1+nRSYnJzE+Pk7brkhJSaG/w8PDKCgowNzcHNbW1lBYWEhX8lADZPkNBgOys7Np
        Z5KEzJoUIwZIwo2NDVqkp6cHVquVtl3hMjA2NobS0lLadjqdUCgUGBoaOtyARqOBTCZDQkIC7azVapGR
        kUFnKpfLUVJSQlfDW7gMkOJ2ux1bW1t0XGNjI53YoQaam5uxtLSEpqYmTExMQKVSwWQy0aR6vR46nY62
        vYXr/8rKSrpiNpsN/f39qKqqog+4VwM+fw05N6J2O+LbfhzYSI4DGUtyuGteNyLOrbjxK2JrPhxIcBzI
        WJLDXfPYin3+MfL559jbgUT3WI6W6ly01nIfLI7Cx5fsPsAuNVlhl+ZxIGHfGGLC40jmBufR6ihEhAY+
        xXhDeERYcK1L8ziSkYsv4RT5hFPkE06RTzhFPuEU+QPMH9VH4r76jtyaAAAAAElFTkSuQmCC
</value>
  </data>
</root>